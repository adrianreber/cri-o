// This provides CRI-O private RPC interfaces used with crioctl.

// To regenerate run 'make private-cri'

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: pkg/private/api.proto

package private

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common options used for checkpointing and restoring.
type CheckpointRestoreOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Keep temporary files. Like log files. Helpful for debugging.
	Keep bool `protobuf:"varint,1,opt,name=keep,proto3" json:"keep,omitempty"`
	// Checkpoint/Restore the container with established TCP connections.
	TcpEstablished bool `protobuf:"varint,2,opt,name=tcp_established,json=tcpEstablished,proto3" json:"tcp_established,omitempty"`
	// Location of the checkpoint archive used for export/import
	Archive string `protobuf:"bytes,3,opt,name=archive,proto3" json:"archive,omitempty"`
	// Specify the checkpoint archive compression algorithm
	// See github.com/containers/storage/pkg/archive/archive.go for
	// possible values.
	Compression int64 `protobuf:"varint,4,opt,name=compression,proto3" json:"compression,omitempty"`
}

func (x *CheckpointRestoreOptions) Reset() {
	*x = CheckpointRestoreOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointRestoreOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointRestoreOptions) ProtoMessage() {}

func (x *CheckpointRestoreOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointRestoreOptions.ProtoReflect.Descriptor instead.
func (*CheckpointRestoreOptions) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointRestoreOptions) GetKeep() bool {
	if x != nil {
		return x.Keep
	}
	return false
}

func (x *CheckpointRestoreOptions) GetTcpEstablished() bool {
	if x != nil {
		return x.TcpEstablished
	}
	return false
}

func (x *CheckpointRestoreOptions) GetArchive() string {
	if x != nil {
		return x.Archive
	}
	return ""
}

func (x *CheckpointRestoreOptions) GetCompression() int64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

type CheckpointContainerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonOptions *CheckpointRestoreOptions `protobuf:"bytes,1,opt,name=common_options,json=commonOptions,proto3" json:"common_options,omitempty"`
	// Leave the container running after checkpointing
	LeaveRunning bool `protobuf:"varint,2,opt,name=leave_running,json=leaveRunning,proto3" json:"leave_running,omitempty"`
}

func (x *CheckpointContainerOptions) Reset() {
	*x = CheckpointContainerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointContainerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointContainerOptions) ProtoMessage() {}

func (x *CheckpointContainerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointContainerOptions.ProtoReflect.Descriptor instead.
func (*CheckpointContainerOptions) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{1}
}

func (x *CheckpointContainerOptions) GetCommonOptions() *CheckpointRestoreOptions {
	if x != nil {
		return x.CommonOptions
	}
	return nil
}

func (x *CheckpointContainerOptions) GetLeaveRunning() bool {
	if x != nil {
		return x.LeaveRunning
	}
	return false
}

type CheckpointContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the container or pod to be checkpointed.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Options for checkpointing.
	Options *CheckpointContainerOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CheckpointContainerRequest) Reset() {
	*x = CheckpointContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointContainerRequest) ProtoMessage() {}

func (x *CheckpointContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointContainerRequest.ProtoReflect.Descriptor instead.
func (*CheckpointContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{2}
}

func (x *CheckpointContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckpointContainerRequest) GetOptions() *CheckpointContainerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type CheckpointContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckpointContainerResponse) Reset() {
	*x = CheckpointContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointContainerResponse) ProtoMessage() {}

func (x *CheckpointContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointContainerResponse.ProtoReflect.Descriptor instead.
func (*CheckpointContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{3}
}

type RestoreContainerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonOptions *CheckpointRestoreOptions `protobuf:"bytes,1,opt,name=common_options,json=commonOptions,proto3" json:"common_options,omitempty"`
	// ID of the sandbox into which the container should be restored
	// If this is not specified the container will be restored
	// in the sandbox it was checkpointed from.
	PodSandboxId string `protobuf:"bytes,2,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// Restoring multiple copies of a checkpointed container may
	// require a new name for the restored container.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The labels and annotations are in the same form as in ContainerConfig
	// during CreateContainerRequest.
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Restoring a container in another pod might require changing
	// Kubernetes specific mounts if the mount source depends on
	// the pod ID.
	// This tells the container engine to replace existing mount
	// sources with a new source.
	ChangeMounts map[string]string `protobuf:"bytes,6,rep,name=change_mounts,json=changeMounts,proto3" json:"change_mounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RestoreContainerOptions) Reset() {
	*x = RestoreContainerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreContainerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreContainerOptions) ProtoMessage() {}

func (x *RestoreContainerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreContainerOptions.ProtoReflect.Descriptor instead.
func (*RestoreContainerOptions) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{4}
}

func (x *RestoreContainerOptions) GetCommonOptions() *CheckpointRestoreOptions {
	if x != nil {
		return x.CommonOptions
	}
	return nil
}

func (x *RestoreContainerOptions) GetPodSandboxId() string {
	if x != nil {
		return x.PodSandboxId
	}
	return ""
}

func (x *RestoreContainerOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestoreContainerOptions) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RestoreContainerOptions) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *RestoreContainerOptions) GetChangeMounts() map[string]string {
	if x != nil {
		return x.ChangeMounts
	}
	return nil
}

type RestoreContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the container or pod to be restored.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Options for restoring.
	Options *RestoreContainerOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RestoreContainerRequest) Reset() {
	*x = RestoreContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreContainerRequest) ProtoMessage() {}

func (x *RestoreContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreContainerRequest.ProtoReflect.Descriptor instead.
func (*RestoreContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{5}
}

func (x *RestoreContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestoreContainerRequest) GetOptions() *RestoreContainerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type RestoreContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the restored container or pod
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// True if the restored container/pod is a pod
	Pod bool `protobuf:"varint,2,opt,name=pod,proto3" json:"pod,omitempty"`
	// Only set if a pod has been restored. This contains
	// a list of restored container IDs in the restored pod.
	RestoredContainers []string `protobuf:"bytes,3,rep,name=restored_containers,json=restoredContainers,proto3" json:"restored_containers,omitempty"`
}

func (x *RestoreContainerResponse) Reset() {
	*x = RestoreContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_private_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreContainerResponse) ProtoMessage() {}

func (x *RestoreContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_private_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreContainerResponse.ProtoReflect.Descriptor instead.
func (*RestoreContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_private_api_proto_rawDescGZIP(), []int{6}
}

func (x *RestoreContainerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestoreContainerResponse) GetPod() bool {
	if x != nil {
		return x.Pod
	}
	return false
}

func (x *RestoreContainerResponse) GetRestoredContainers() []string {
	if x != nil {
		return x.RestoredContainers
	}
	return nil
}

var File_pkg_private_api_proto protoreflect.FileDescriptor

var file_pkg_private_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x22, 0x93, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x65, 0x65,
	0x70, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x63, 0x70, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x63, 0x70, 0x45,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x22, 0x6b, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xcd, 0x04, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6f, 0x64, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3f, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x65, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6d, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x32, 0xcf, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x69, 0x2d, 0x6f, 0x2f, 0x63, 0x72, 0x69,
	0x2d, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x69, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_private_api_proto_rawDescOnce sync.Once
	file_pkg_private_api_proto_rawDescData = file_pkg_private_api_proto_rawDesc
)

func file_pkg_private_api_proto_rawDescGZIP() []byte {
	file_pkg_private_api_proto_rawDescOnce.Do(func() {
		file_pkg_private_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_private_api_proto_rawDescData)
	})
	return file_pkg_private_api_proto_rawDescData
}

var file_pkg_private_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_private_api_proto_goTypes = []interface{}{
	(*CheckpointRestoreOptions)(nil),    // 0: private.CheckpointRestoreOptions
	(*CheckpointContainerOptions)(nil),  // 1: private.CheckpointContainerOptions
	(*CheckpointContainerRequest)(nil),  // 2: private.CheckpointContainerRequest
	(*CheckpointContainerResponse)(nil), // 3: private.CheckpointContainerResponse
	(*RestoreContainerOptions)(nil),     // 4: private.RestoreContainerOptions
	(*RestoreContainerRequest)(nil),     // 5: private.RestoreContainerRequest
	(*RestoreContainerResponse)(nil),    // 6: private.RestoreContainerResponse
	nil,                                 // 7: private.RestoreContainerOptions.LabelsEntry
	nil,                                 // 8: private.RestoreContainerOptions.AnnotationsEntry
	nil,                                 // 9: private.RestoreContainerOptions.ChangeMountsEntry
}
var file_pkg_private_api_proto_depIdxs = []int32{
	0, // 0: private.CheckpointContainerOptions.common_options:type_name -> private.CheckpointRestoreOptions
	1, // 1: private.CheckpointContainerRequest.options:type_name -> private.CheckpointContainerOptions
	0, // 2: private.RestoreContainerOptions.common_options:type_name -> private.CheckpointRestoreOptions
	7, // 3: private.RestoreContainerOptions.labels:type_name -> private.RestoreContainerOptions.LabelsEntry
	8, // 4: private.RestoreContainerOptions.annotations:type_name -> private.RestoreContainerOptions.AnnotationsEntry
	9, // 5: private.RestoreContainerOptions.change_mounts:type_name -> private.RestoreContainerOptions.ChangeMountsEntry
	4, // 6: private.RestoreContainerRequest.options:type_name -> private.RestoreContainerOptions
	2, // 7: private.RuntimeService.CheckpointContainer:input_type -> private.CheckpointContainerRequest
	5, // 8: private.RuntimeService.RestoreContainer:input_type -> private.RestoreContainerRequest
	3, // 9: private.RuntimeService.CheckpointContainer:output_type -> private.CheckpointContainerResponse
	6, // 10: private.RuntimeService.RestoreContainer:output_type -> private.RestoreContainerResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pkg_private_api_proto_init() }
func file_pkg_private_api_proto_init() {
	if File_pkg_private_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_private_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointRestoreOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointContainerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreContainerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_private_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_private_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_private_api_proto_goTypes,
		DependencyIndexes: file_pkg_private_api_proto_depIdxs,
		MessageInfos:      file_pkg_private_api_proto_msgTypes,
	}.Build()
	File_pkg_private_api_proto = out.File
	file_pkg_private_api_proto_rawDesc = nil
	file_pkg_private_api_proto_goTypes = nil
	file_pkg_private_api_proto_depIdxs = nil
}
